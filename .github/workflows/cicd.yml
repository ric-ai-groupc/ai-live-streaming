name: vuejs cicd

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  compile-and-build:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
          cache: "npm"
      
      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint
        continue-on-error: true

      - name: Compile
        run: npm run build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.IMAGE_FULL_NAME }}:latest
            ${{ secrets.IMAGE_FULL_NAME }}:${{ steps.short-sha.outputs.sha }}

      - name: SSH to server and update
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker pull ${{ secrets.IMAGE_FULL_NAME }}:latest
            docker stop ai-live-streaming || true
            docker rm ai-live-streaming || true
            docker run -d --name ai-live-streaming -p 80:80 ${{ secrets.IMAGE_FULL_NAME }}:latest
